                             ______________

                              MODULE-NOTES
                             ______________


Table of Contents
_________________

1 Piece
.. 1.1 fields
2 M: Board
.. 2.1 move a piece
.. 2.2 unmove a piece
.. 2.3 get ajacent pieces
.. 2.4 get connected pieces
.. 2.5 does a square contain a piece?
.. 2.6 M: network finder
3 MachinePlayer
.. 3.1 M: performing minimax tree search
.. 3.2 M: generating a list of all valid moves
.. 3.3 M: determining whether a move is valid
.. 3.4 M: determining whether a move will result in the formation of a cluster >= 3
.. 3.5 M: board evaluation function
.. 3.6 move opponents piece
.. 3.7 force a move


method organized by class

each method that is part of a separate module is marked with 'M:'

everything in the board is one module except for the network finder


1 Piece
=======

1.1 fields
~~~~~~~~~~

  int color int x int y


2 M: Board
==========

2.1 move a piece
~~~~~~~~~~~~~~~~

  void move(Move M);


2.2 unmove a piece
~~~~~~~~~~~~~~~~~~

  void unMove(Move M);


2.3 get ajacent pieces
~~~~~~~~~~~~~~~~~~~~~~

  Piece[] ajacentPieces(int x, int y); Piece[] ajacentPieces(Piece P);


2.4 get connected pieces
~~~~~~~~~~~~~~~~~~~~~~~~

  Piece[] connectedPieces(Piece P); Piece[] connectedPieces(int x, int
  y);


2.5 does a square contain a piece?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  boolean pieceAt(int x, int y);


2.6 M: network finder
~~~~~~~~~~~~~~~~~~~~~

  boolean hasNetwork(Player P);


3 MachinePlayer
===============

3.1 M: performing minimax tree search
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  public abstract Move chooseMove(Player P);


3.2 M: generating a list of all valid moves
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Move[] validMoves(Board B, Player P);


3.3 M: determining whether a move is valid
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  Boolean isValidMove(Board B, Move M, Player P);


3.4 M: determining whether a move will result in the formation of a cluster >= 3
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  boolean formsIllegalCluster(Board M, Move M, Player P);


3.5 M: board evaluation function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

  int scoreBoard(Board B, Player P);


3.6 move opponents piece
~~~~~~~~~~~~~~~~~~~~~~~~

  public boolean opponentMove(Move m);


3.7 force a move
~~~~~~~~~~~~~~~~

  public boolean forceMove(Move m);
